Overview: Two Post‑Move Mouse Options with MOVE8
When a movement transition (using either Bézier or linear easing) finishes, the system enters a “post‑move” phase. In this phase you have two distinct modes for handling mouse input:

FREE_MOUSE:
– The mouse controls the camera’s rotation (freeCamYaw/freeCamPitch) independently.
– The “stick” (the camera’s positional anchor, freeCamPosition) stays fixed (or is only updated by the easing logic, not directly by mouse motion).
– The player’s head (or model) is snapped to one of eight directions (MOVE8) based on keyboard input relative to the current freeCamYaw. This lets the player choose one of eight discrete orientations for movement, while the camera can look around freely.

NONE:
– The mouse does not directly update the camera’s rotation. Instead, the system uses keyboard input to “nudge” the camera stick itself.
– In this case, the entire stick (its position and rotation) is moved via the easing logic (using the same positionEasing/rotationEasing and speed limits that govern Bézier/linear movement).
– With MOVE8 enabled, the player’s head still snaps to one of eight directions based on key combinations, but now the overall camera “stick” (freeCamPosition and freeCamYaw/freeCamPitch) is driven by that movement input rather than independent mouse adjustments.

How They Work with MOVE8 Movement
A. MOVE8 with FREE_MOUSE
Independent Camera Rotation:
When post‑move mouse mode is set to FREE_MOUSE, the mouse “nudges” only the freeCamYaw and freeCamPitch values. That is, the camera’s orientation is updated immediately by the mouse (subject to the easing limits already in place) while the camera’s position (the stick) remains unchanged by the mouse.

Discrete Player Orientation:
In MOVE8 mode, the keyboard input calculates a target yaw (by adding a fixed offset to freeCamYaw based on which keys are pressed) and immediately sets the player’s yaw to that target value. The player’s head “snaps” to one of the eight directions relative to the current camera view.

Resulting Behavior:
• The player’s movement (simulated by setting forward movement) is determined by the snapped direction.
• The camera’s stick (its anchored position) stays put while the user can still look around freely with the mouse.
• The overall effect is that even though the player is moving in one of eight preset directions, the view is independently adjustable so the player can look in any direction without moving the camera stick.

B. MOVE8 with NONE
Stick Movement via Keyboard Input:
When the post‑move mouse option is set to NONE, the mouse does not adjust the camera’s rotation independently. Instead, the “stick” itself is moved by the easing logic that responds to keyboard input. In other words, the camera’s freeCamPosition and its rotation are updated by the same interpolation that moves the camera along its Bézier or linear path.

Discrete Player Orientation Remains:
As in FREE_MOUSE mode, MOVE8 logic uses the current freeCamYaw (which in this mode is driven only by keyboard/easing changes) as the basis for computing the target yaw. The player’s head is then snapped to one of eight directions relative to that yaw, and simulated forward movement is applied.

Resulting Behavior:
• The entire camera “stick” is adjusted when the movement keys are pressed.
• There is no separate free mouse–based rotation; the camera’s orientation is changed as part of the eased, stick–based movement.
• Thus, the discrete MOVE8 movement still applies: the player rotates to one of eight directions and moves forward accordingly, with the camera’s state (position/rotation) shifting gradually as determined by the easing logic.

Key Points to Ensure Both Modes Work with MOVE8
For Both Modes:
• The calculation of the target yaw for MOVE8 is always based on the current freeCamYaw.
• When a movement key combination is pressed, the system computes the appropriate offset (e.g., ±45°, ±90°, etc.) from freeCamYaw, snaps the player’s yaw to that value, and simulates forward movement.

Differences in Mouse Handling:
• FREE_MOUSE: The mouse directly modifies freeCamYaw/freeCamPitch independent of the stick’s position; the stick remains fixed while the camera rotates under the mouse’s control.
• NONE: The mouse does not inject independent rotation; instead, the keyboard input causes the stick (the camera’s entire state) to be adjusted via easing. The camera’s rotation is updated as part of that overall stick movement.

User Experience:
– In FREE_MOUSE mode, players can look around without shifting the camera’s position, while still moving discretely in one of eight directions.
– In NONE mode, any adjustment to the camera’s view happens as part of the overall movement (the “stick” moves), so the camera’s position and rotation evolve together as the player commands movement.

Conclusion
By distinguishing the two options—FREE_MOUSE for independent, mouse‑driven camera rotation (with a fixed stick) and NONE for stick movement controlled by keyboard input—you can ensure that MOVE8 movement works seamlessly in both cases. In either mode, the player's eight‑direction snapping is calculated relative to the current freeCamYaw, and simulated forward movement is applied, while the camera’s behavior (whether rotating independently or moving as a unit) follows the respective mouse option’s design.